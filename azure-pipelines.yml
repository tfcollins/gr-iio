# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

#trigger:
#- upgrade-3.8

jobs:
###########################################################
# Builds
###########################################################
- job: LinuxBuilds
  # Host Box
  pool:
    vmImage: 'ubuntu-16.04'
  # Docker Images
  strategy:
    matrix:
      ubuntu20-apt:
        image: tfcollins/test-ubuntu:20.04
        gr-source: apt
      ubuntu18-ppa-release:
        image: tfcollins/test-ubuntu:18.04
        gr-source: ppa
        ppa-ver: releases
      ubuntu18-ppa-master:
        image: tfcollins/test-ubuntu:18.04
        gr-source: ppa
        ppa-ver: master
  container: $[ variables['image'] ]
  steps:
  - script: |
      sudo DEBIAN_FRONTEND=noninteractive apt-get -qq update
      sudo DEBIAN_FRONTEND=noninteractive apt-get install -y git cmake doxygen graphviz libaio-dev libusb-1.0-0-dev libserialport-dev libavahi-client-dev libxml2-dev rpm tar bzip2 gzip flex bison git
      sudo DEBIAN_FRONTEND=noninteractive apt-get install -y python3 python3-pip python3-setuptools
    displayName: "Setup Ubuntu"
  - script: |
      sudo DEBIAN_FRONTEND=noninteractive apt-get install -y gnuradio gnuradio-dev liborc-dev libgmp-dev
    displayName: "Setup GR-APT"
    condition: contains(variables['gr-source'], 'apt')
  - script: |
      sudo apt-get install -y software-properties-common
      sudo add-apt-repository --yes ppa:gnuradio/gnuradio-'$(ppa-ver)'
      sudo apt-get update
      sudo DEBIAN_FRONTEND=noninteractive apt-get install -y gnuradio gnuradio-dev liborc-dev libgmp-dev
    displayName: "Setup GR-PPA"
    condition: contains(variables['gr-source'], 'ppa')
  - script: |
      git clone https://github.com/analogdevicesinc/libiio.git
      cd libiio
      mkdir build && cd build
      cmake ..
      make
      sudo make install
      sudo ldconfig
      cd ../..
    displayName: "Install libiio"
  - script: |
      git clone https://github.com/analogdevicesinc/libad9361-iio.git
      cd libad9361-iio
      mkdir build && cd build
      cmake ..
      make
      sudo make install
      sudo ldconfig
      cd ../..
    displayName: "Install libad9361"
  - script: |
      mkdir build
      cd build
      cmake ..
      make
      sudo make install
    displayName: "Build gr-iio"
  - task: CopyFiles@2
    inputs:
      sourceFolder: '$(Agent.BuildDirectory)/s/build/'
      contents: '$(Agent.BuildDirectory)/s/build/?(*.deb|*.rpm)'
      targetFolder: '$(Build.ArtifactStagingDirectory)'
  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: drop

###########################################################
# Deploy
###########################################################
